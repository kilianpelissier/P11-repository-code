name: Integration Continue

on:
  push:
    branches:
      - main

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: medhead
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./Backend/api/mvnw

      - name: Compile the project
        run: ./mvnw compile
        working-directory: ./Backend/api

      - name: Install dependencies
        run: ./mvnw install -DskipTests
        working-directory: ./Backend/api

      - name: Run backend tests
        run: ./mvnw test
        working-directory: ./Backend/api

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        working-directory: ./Frontend/medhead

      - name: Install Puppeteer
        run: npm install puppeteer
        working-directory: ./Frontend/medhead

      - name: Run frontend tests
        run: npm test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./Frontend/medhead

  publish:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./Backend/api/mvnw

      - name: Build backend JAR
        run: ./mvnw package -DskipTests
        working-directory: ./Backend/api

      - name: Verify JAR file exists
        run: ls -l ./Backend/api/target/*.jar

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/medhead-poc-backend:latest -f ./Backend/Dockerfile .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/medhead-poc-backend:latest

      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/medhead-poc-frontend:latest -f ./Frontend/Dockerfile .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/medhead-poc-frontend:latest